/*!
 * console-ban v2.2.0
 * (c) 2020-2021 fz6m
 * Released under the MIT License.
 */
var e=function(){return(e=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var n in t=arguments[i])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},t={clear:!0,debug:!0,debugTime:3e3};function i(e){return~navigator.userAgent.toLowerCase().indexOf(e)}var r=function(){function r(i){var r=e(e({},t),i),n=r.clear,o=r.debug,c=r.debugTime,a=r.callback,s=r.redirect,l=r.write;this._debug=o,this._debugTime=c,this._clear=n,this._callback=a,this._redirect=s,this._write=l,this._evalCounts=0,this._isOpenedEver=!1}return r.prototype.clear=function(){this._clear&&(console.clear=function(){})},r.prototype.debug=function(){if(this._debug){var e=new Function("debugger");setInterval(e,this._debugTime)}},r.prototype.redirect=function(){if(this._redirect)if(~this._redirect.indexOf("http"))location.href!==this._redirect&&(location.href=this._redirect);else{var e,t=location.pathname+location.search;if(((e=this._redirect)?"/"!==e[0]?"/"+e:e:"/")!==t)location.href=this._redirect}},r.prototype.callback=function(){var e=this;if((this._callback||this._redirect||this._write)&&window){var t=window.chrome||i("chrome"),r=i("firefox");if(t){var n=new Function;return n.toString=function(){return e._evalCounts++,e._evalCounts===(e._isOpenedEver?1:2)&&(e._isOpenedEver=!0,e._evalCounts=0,e.fire()),"[WARNING] fire in the hole"},void console.log("%c",n)}if(r){var o=/./;return o.toString=function(){return e.fire(),"[WARNING] fire in the hole"},void console.log(o)}var c=new Image;Object.defineProperty(c,"id",{get:function(){e.fire()}}),console.log(c)}},r.prototype.write=function(){this._write&&(document.body.innerHTML="string"==typeof this._write?this._write:this._write.innerHTML)},r.prototype.fire=function(){this._callback?this._callback.call(null):(this.redirect(),this._redirect||this.write())},r.prototype.ban=function(){this.callback(),this.clear(),this.debug()},r}();function n(e){new r(e).ban()}export default n;export{n as init};
